// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyTradingApp.Persistence;

namespace MyTradingApp.Core.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MyTradingApp.Domain.Setting", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnName("varchar(25)")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Key");

                    b.ToTable("Setting");
                });

            modelBuilder.Entity("MyTradingApp.Domain.StopLoss", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("StopPrice")
                        .HasColumnType("float");

                    b.Property<byte>("StopType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("TradeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TradeId");

                    b.ToTable("StopLoss");
                });

            modelBuilder.Entity("MyTradingApp.Domain.Trade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("Direction")
                        .HasColumnType("tinyint");

                    b.Property<double>("EntryPrice")
                        .HasColumnType("float");

                    b.Property<DateTime>("EntryTimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<double?>("ExitPrice")
                        .HasColumnType("float");

                    b.Property<DateTime?>("ExitTimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<double?>("ProfitLoss")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Symbol")
                        .HasColumnType("varchar(6)");

                    b.HasKey("Id");

                    b.ToTable("Trade");
                });

            modelBuilder.Entity("MyTradingApp.Domain.StopLoss", b =>
                {
                    b.HasOne("MyTradingApp.Domain.Trade", "Trade")
                        .WithMany("Stops")
                        .HasForeignKey("TradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
